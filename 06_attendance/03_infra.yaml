AWSTemplateFormatVersion: '2010-09-09'
Description: network for attendance application

Parameters:
  HealthCheckPath:
    Description: The url path for application health check
    Type: String
    Default: /attendance/stat
  ListenerPath:
    Description: The url path to access application
    Type: String
    Default: /attendance/*
  DBClusterIdentifier:
    Description: The Identifier for db cluster
    Type: String
    Default: attendance-db-cluster
  DatabaseName:
    Description: Database name
    Type: String
    Default: AttendanceDB
  BucketName:
    Description: The name for bucket who use to save static resources
    Type: String
    Default: attendance-static

Resources:
  # ロードバランサー
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: attendance-alb
      Subnets:
        - !ImportValue AttendancePublicSubnet1
        - !ImportValue AttendancePublicSubnet2
      SecurityGroups:
        - !ImportValue LoadBalancerSecurityGroup

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
  
  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: default
      VpcId: !ImportValue AttendanceVPC
      Protocol: HTTP
      Port: 80

  # ECSクラスタ
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: attendance-cluster

  # ECR
  AttendanceECR:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: attendance
      Tags: 
        - Key: Name
          Value: AttendanceECR

  AttendanceTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: attendance-tg
      VpcId: !ImportValue AttendanceVPC
      Port: 80
      Protocol: HTTP
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckProtocol: HTTP
      TargetType: ip
  
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - !Ref ListenerPath
      Actions:
        - TargetGroupArn: !Ref AttendanceTargetGroup
          Type: forward

  # S3 Bucket

  AttendanceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName

  # secret for rdb
  RDSSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: RDSSecret
      Description: "This is automatic generated Secrets Manager secret for an RDS DB instance"
      GenerateSecretString:
        # ユーザー名 "developersio"がハードコードされている
        SecretStringTemplate: '{"username": "admin"}'
        # パスワード "キーが生成され、マージされます。
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\$`&:{}()[]+*=^-|'
  
  SecretManagerVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !ImportValue AttendanceVPC
      SubnetIds:
        - !ImportValue AttendancePrivateSubnet1
        - !ImportValue AttendancePrivateSubnet2
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.secretsmanager"
      SecurityGroupIds:
        - !ImportValue ContainerSecurityGroup
        - !ImportValue DBSecurityGroup
      VpcEndpointType: Interface
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Principal: "*"
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref RDSSecret

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'subnet group for rdb'
      SubnetIds:
        - !ImportValue AttendancePrivateSubnet1
        - !ImportValue AttendancePrivateSubnet2

  DBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: 'parameter group for rdb cluster'
      Family: aurora-mysql8.0
      Parameters:
        character_set_server: utf8
        character_set_client: utf8
        character_set_connection: utf8
        character_set_results: utf8
        character_set_database: utf8
        performance_schema: 1

  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: 'parameter group for rdb'
      Family: aurora-mysql8.0
      Parameters:
        general_log: 0
        slow_query_log: 1
        long_query_time: 5000
        log_output: FILE

  DBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    Properties:
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.02.0
      VpcSecurityGroupIds:
        - !ImportValue DBSecurityGroup
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup
      BackupRetentionPeriod: 7
      DatabaseName: !Ref DatabaseName
      DBClusterIdentifier: !Ref DBClusterIdentifier
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecret, ':SecretString:password}}' ]]
      ServerlessV2ScalingConfiguration: 
        MaxCapacity: 16
        MinCapacity: 0.5

  DBInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceIdentifier: instance1
      DBInstanceClass: db.serverless
      DBParameterGroupName: !Ref DBParameterGroup
      Engine: aurora-mysql
      PromotionTier: 0
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region

  DBInstance2:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceIdentifier: instance2
      DBInstanceClass: db.serverless
      DBParameterGroupName: !Ref 'DBParameterGroup'
      Engine: aurora-mysql
      PromotionTier: 1
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: AWS::Region

  SecretRDSInstanceAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    DependsOn:
      - DBCluster
      - DBInstance1
      - DBInstance2
      - RDSSecret
      - SecretManagerVpcEndpoint
    Properties:
      SecretId: !Ref RDSSecret
      TargetId: !Ref DBCluster
      TargetType: AWS::RDS::DBCluster

Outputs:
  AttendanceTargetGroup:
    Description: 'AttendanceTargetGroup'
    Value: !Ref AttendanceTargetGroup
    Export:
      Name: AttendanceTargetGroup
  